@model ArtistLibrary.Models.Models.ViewModel.AlbumVM

@{
    ViewData["Title"] = "All Albums";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #ff7e5f, #feb47b);
            color: white;
            text-align: center;
            margin: 0;
            padding: 20px;
        }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 60px;
            font-family: Georgia, serif;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
            font-weight: bold;
        }

        .navbar {
            display: flex;
            justify-content: space-around;
            background-color: #333;
            padding: 5px;
            color: white;
            border-radius: 10px;
            width: 50%;
            margin: 20px auto;
        }

            .navbar a {
                color: white;
                text-decoration: none;
                padding: 10px 15px;
                transition: background-color 0.3s;
            }

                .navbar a:hover {
                    background-color: transparent;
                    color: #ff7e5f;
                }

        .artist-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            margin-top: 40px;
        }

        .artist-card {
            background: #444;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
            overflow: hidden;
            width: 200px;
            text-align: left;
            color: inherit;
            transition: transform 0.3s;
        }

            .artist-card:hover {
                transform: translateY(-5px);
            }

            .artist-card img {
                width: 100%;
                height: 200px;
                object-fit: cover;
            }

        .info {
            padding: 10px;
        }

        .name {
            font-weight: bold;
            margin-bottom: 5px;
            font-size: 1.2rem;
        }

        .release-date,
        .artist-name {
            color: #ccc;
        }

        .track-list {
            margin-top: 10px;
            font-size: 0.9rem;
            color: #f1f1f1;
            padding: 5px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 5px;
            display: none; /* Oculto por padrão */
        }

        .track-toggle {
            background: #ff7e5f;
            border: none;
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 10px;
            transition: background-color 0.3s;
        }

            .track-toggle:hover {
                background: #ff6a47;
            }

        .add-btn {
            display: inline-block;
            margin-top: 40px;
            padding: 10px 20px;
            border-radius: 25px;
            background-color:  #333;
            color: white;
            font-size: 1rem;
            font-weight: bold;
            text-decoration: none;
            text-transform: uppercase;
            transition: background-color 0.3s, box-shadow 0.3s;
        }

    </style>
</head>
<body>
    <div class="navbar">
        <a href="@Url.Action("Index", "Home")">Home</a>
        <a href="@Url.Action("GetAllSolists", "Solists")">Solists</a>
        <a href="@Url.Action("GetAllGroups", "Groups")">Groups</a>
    </div>

    <h1>@ViewData["Title"]</h1>

    @if (Model.Albums.Count == 0)
    {
        <p>No albums found with the search criteria.</p>
    }

    <div class="artist-container">
        @foreach (var album in Model.Albums)
        {
            <div class="artist-card">
                <img src="@album.AlbumCover" alt="Cover of @album.AlbumName" />
                <div class="info">
                    <div class="name">@album.AlbumName</div>
                    <div class="release-date">Release Date: @album.AlbumRelease.ToString("d")</div>
                    <div class="artist-name">Artist: @(Model.ArtistNames[Model.Albums.IndexOf(album)])</div>
                    <button class="track-toggle" onclick="toggleTracks(this)">Show Tracks</button>
                    <div class="track-list">
                        <strong>Tracks:</strong>
                        <ul>
                            @{
                                // Supondo que as faixas sejam separadas por vírgulas em uma única string
                                var tracks = album.AlbumTracklist.Split(','); // Altere o delimitador conforme necessário
                            }
                            @foreach (var track in tracks)
                            {
                                <li>@track.Trim()</li> <!-- Exibe cada faixa como um item de lista, removendo espaços -->
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>

    <a href="@Url.Action("AddNewAlbum", "Album")" class="add-btn">Add Album</a>

    <script>
        function toggleTracks(button) {
            var trackList = button.nextElementSibling;
            if (trackList.style.display === "none" || trackList.style.display === "") {
                trackList.style.display = "block"; // Mostra a lista
                button.innerText = "Hide Tracks"; // Muda o texto do botão
            } else {
                trackList.style.display = "none"; // Oculta a lista
                button.innerText = "Show Tracks"; // Muda o texto do botão
            }
        }
    </script>
</body>
</html>
